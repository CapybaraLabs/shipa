plugins {
	id "org.jetbrains.kotlin.jvm"
	id "org.springframework.boot"
	id "org.jetbrains.kotlin.kapt"
	id "org.jetbrains.kotlin.plugin.spring" // opens certain classes
	id "com.adarshr.test-logger"
	id "jacoco"
}

configurations {
	//undertow master race
	implementation.exclude module: "spring-boot-starter-reactor-netty"
	implementation.exclude module: "spring-boot-starter-tomcat"
}

dependencies {
	implementation platform(libs.kotlin.bom)
	implementation platform(libs.spring.boot.bom)
	kapt platform(libs.spring.boot.bom)
	developmentOnly platform(libs.spring.boot.bom)
	testImplementation platform(libs.spring.boot.bom)
	testRuntimeOnly platform(libs.spring.boot.bom)

	implementation rootProject
	implementation "org.springframework.boot:spring-boot-starter-undertow"
	kapt "org.springframework.boot:spring-boot-configuration-processor"
	developmentOnly "org.springframework.boot:spring-boot-devtools"

	testImplementation "org.junit.jupiter:junit-jupiter-api"
	testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine"
	testImplementation("org.springframework.boot:spring-boot-starter-test") {
		//don't drag in weird JSON impl with conflicting JSONObject and missing gradle metadata
		exclude group: "com.vaadin.external.google", module: "android-json"
	}
	testImplementation "org.mockito:mockito-inline"
	testImplementation libs.mockitokotlin
	testImplementation "com.jayway.jsonpath:json-path-assert"
}

test {
	useJUnitPlatform()
	jvmArgs("-XX:TieredStopAtLevel=1")
}

testlogger {
	theme "mocha"
}


springBoot {
	mainClass = "dev.capybaralabs.shipa.LauncherKt"
}

jar {
	onlyIf { false }
}

